const input = [require('fs').readFileSync('input', 'utf8').split('\n\n')].map(([g,m]) => [g.split('\n').map(x => x.split('')), m.split('').filter(x => x != '\n')])[0]

console.log([f = (g,p,d) => (g.get(p+d) == '#') ? false : ((!g.has(p+d) || f(g,p+d,d)) ? (g.set(p+d, g.get(p)), g.delete(p), true) : false)].map(f => [...input[1].map(x => ({'^':-100,'v':100,'<':-1,'>':1})[x]).reduce(([g,r],b) => [g, f(g,r,b)?r+b:r], [new Map(input[0].flatMap((r,y) => r.map((c,x) => [y*100+x,c])).filter(([_, c]) => ['#','O','@'].includes(c))), [input[0].findIndex(x => x.includes('@'))].map(y => y*100+input[0][y].findIndex(z => z == '@'))[0]])[0].entries()].filter(([p,c]) => c == 'O').reduce((a,[p]) => a+p, 0))[0])

console.log([f = (g,p,d) => (g.get(p+d) == '#') ? false : ((Math.abs(d) >= 100 && '[]'.includes(g.get(p+d)) && (!f(g,p+d+(g.get(p+d) == '[' ? 1 : -1),d))) ? false : ((!g.has(p+d) || f(g,p+d,d)) ? (g.set(p+d, g.get(p)), g.delete(p), [g, p+d]) : false))].map(f => [...input[1].map(x => ({'^':-100,'v':100,'<':-1,'>':1})[x]).reduce(([g, rob], b) => f(Math.abs(b) >= 100 ? new Map([...g]) : g,rob,b) || [g, rob], [new Map(input[0].map(x => x.flatMap(c => ({'@':['@','.'],'O':['[',']']})[c]||[c,c])).flatMap((l,y)=>l.map((c,x)=>[y*100+x,c])).filter(([_,c]) => '#[]@'.includes(c))),[input[0].findIndex(x => x.includes('@'))].map(y => y*100+2*input[0][y].findIndex(z => z == '@'))[0]])[0].entries()].filter(([_,c]) => c == '[').reduce((a,[b]) => a+b, 0))[0])
